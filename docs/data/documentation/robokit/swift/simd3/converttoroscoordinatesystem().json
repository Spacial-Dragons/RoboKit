{"identifier":{"url":"doc:\/\/robokit.RoboKit\/documentation\/RoboKit\/Swift\/SIMD3\/convertToROSCoordinateSystem()","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/robokit\/swift\/simd3\/converttoroscoordinatesystem()"]}],"sections":[],"kind":"symbol","metadata":{"title":"convertToROSCoordinateSystem()","extendedModule":"Swift","role":"symbol","symbolKind":"method","externalID":"s:s5SIMD3V7RoboKitSfRszrlE28convertToROSCoordinateSystemABySfGyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertToROSCoordinateSystem","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"SIMD3","kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD3V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sf","text":"Float"},{"kind":"text","text":">"}],"modules":[{"name":"RoboKit","relatedModules":["Swift"]}],"roleHeading":"Instance Method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Float","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"abstract":[{"type":"text","text":"Converts the current vector from RealityKit’s to ROS (Robot Operating System) coordinate system."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"convertToROSCoordinateSystem","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD3V","text":"SIMD3"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sf","text":"Float","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["visionOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"text":"A ","type":"text"},{"code":"SIMD3<Float>","type":"codeVoice"},{"text":" adjusted to match ROS coordinate system conventions.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This method adjusts the vector’s components to match the ROS coordinate convention,"},{"type":"text","text":" "},{"type":"text","text":"which uses a different axis orientation than RealityKit."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Specifically:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"x"},{"text":" component remains unchanged.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"y"},{"text":" component becomes the negated original ","type":"text"},{"type":"codeVoice","code":"z"},{"type":"text","text":", unless "},{"code":"z","type":"codeVoice"},{"type":"text","text":" is zero."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"z","type":"codeVoice"},{"text":" component becomes the original y.","type":"text"}]}]}]},{"syntax":"swift","code":["let original = SIMD3<Float>(1.0, 2.0, 3.0)","let rosVector = original.convertToROSCoordinateSystem()","\/\/ rosVector = SIMD3<Float>(1.0, -3.0, 2.0)"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/robokit.RoboKit\/documentation\/RoboKit","doc:\/\/robokit.RoboKit\/documentation\/RoboKit\/Swift","doc:\/\/robokit.RoboKit\/documentation\/RoboKit\/Swift\/SIMD3"]]},"references":{"RoboKitLogo.png":{"type":"image","identifier":"RoboKitLogo.png","variants":[{"url":"\/images\/robokit.RoboKit\/RoboKitLogo.png","traits":["1x","light"]},{"traits":["1x","dark"],"url":"\/images\/robokit.RoboKit\/RoboKitLogo~dark.png"}],"alt":"RoboKit logo."},"doc://robokit.RoboKit/documentation/RoboKit/Swift":{"abstract":[],"url":"\/documentation\/robokit\/swift","kind":"symbol","type":"topic","identifier":"doc:\/\/robokit.RoboKit\/documentation\/RoboKit\/Swift","title":"Swift","role":"collection"},"doc://robokit.RoboKit/documentation/RoboKit":{"type":"topic","url":"\/documentation\/robokit","abstract":[{"text":"RoboKit is a framework designed to facilitate the integration between visionOS applications and robotics software.","type":"text"}],"title":"RoboKit","kind":"symbol","identifier":"doc:\/\/robokit.RoboKit\/documentation\/RoboKit","role":"collection","images":[{"type":"icon","identifier":"RoboKitLogo.png"}]},"doc://robokit.RoboKit/documentation/RoboKit/Swift/SIMD3":{"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMD3","kind":"identifier","preciseIdentifier":"s:s5SIMD3V"}],"type":"topic","abstract":[],"identifier":"doc:\/\/robokit.RoboKit\/documentation\/RoboKit\/Swift\/SIMD3","kind":"symbol","url":"\/documentation\/robokit\/swift\/simd3","role":"symbol","navigatorTitle":[{"text":"SIMD3","kind":"identifier"}],"title":"SIMD3"},"doc://robokit.RoboKit/documentation/RoboKit/Swift/SIMD3/convertToROSCoordinateSystem()":{"title":"convertToROSCoordinateSystem()","type":"topic","identifier":"doc:\/\/robokit.RoboKit\/documentation\/RoboKit\/Swift\/SIMD3\/convertToROSCoordinateSystem()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"convertToROSCoordinateSystem"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s5SIMD3V","text":"SIMD3","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Float","preciseIdentifier":"s:Sf","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"Converts the current vector from RealityKit’s to ROS (Robot Operating System) coordinate system.","type":"text"}],"kind":"symbol","url":"\/documentation\/robokit\/swift\/simd3\/converttoroscoordinatesystem()","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Float"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}